---
import { Icon } from 'astro-icon';
import { Image } from 'astro:assets';

import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import { categoryData } from '~/data';

import type { Post } from '~/types';

export interface Props {
  post: Post;
  url: string | URL;
}

const { post, url } = Astro.props;
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article class="post-article">
    <header class={post.image ? '' : ''}>
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        {
          post.category && (
            <p>
              <a
                class={`capitalize font-bold ${categoryData[post.category].classes.outline} hover:underline `}
                href={getPermalink(post.category, 'category')}
              >
                {post.category.replaceAll('-', ' ')}
              </a>
            </p>
          )
        }
      </div>
      <h1
        class="px-4 sm:px-6 max-w-3xl mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading"
      >
        {post.title}
      </h1>
      <p class="max-w-3xl mx-auto my-4 px-4 sm:px-6 text-xl md:text-2xl text-muted dark:text-slate-400 text-justify">
        {post.excerpt}
      </p>
      <PostTags tags={post.tags} class="px-4 sm:px-6 mb-6 max-w-3xl mx-auto" />
      {
        post.image ? (
          <>
            <Image
              class="max-w-full lg:max-w-6xl mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"
              width={900}
              height={506}
              src={post.image}
              alt={post.title}
              quality="high"
            />
          </>
        ) : (
          <div class="max-w-3xl mx-auto px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <p>
          <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.publishDate)}>{getFormattedDate(post.publishDate)}</time>
          {post.readingTime && <> Â· {post.readingTime} min read</>}
        </p>
      </div>
    </header>

    <div
      class={`mx-auto ${post.category !== 'lists' && 'px-6'} sm:px-6 max-w-3xl
        prose prose-lg dark:prose-invert dark:prose-headings:text-slate-300 prose-md
        prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold 
        prose-a:text-primary dark:prose-a:text-[#399ee6] 
        prose-img:rounded-md prose-img:shadow-lg mt-8 
        marker:text-[#c79bff]
        prose-code:bg-[#240041] prose-code:after:content-[''] prose-code:before:content-[''] prose-code:text-[#c79bff] prose-code:px-2 prose-code:py-1 prose-code:rounded-md`}
    >
      {
        post.headings.length > 0 && (
          <div class="fixed z-10 bottom-24 right-3 md:sticky md:top-24">
            <button
              class="my-0 z-10 fixed md:sticky bottom-20 rounded-[14px] h-fit right-3 md:w-full md:mx-auto md:flex items-center md:p-2 bg-[#900048] dark:text-[#00ffb7]"
              data-aw-toggle-toc
              aria-label="Table of content"
            >
              <Icon class="h-12 w-12 md:h-10 md:w-10 p-2" name="tabler:list" />
              <p class="hidden md:block m-0 ml-2">Table of content</p>
            </button>
            <nav class="hidden not-prose">
              <ul class="text-[#00ffb7] fixed md:sticky rounded-md max-h-96 md:h-fit w-full overscroll-contain overflow-auto animate-fade-up bottom-16 left-0 md:backdrop-blur-sm dark:bg-[#240041] p-5">
                {post.headings.map(({ slug, text, depth }) => (
                  <li class="px-3 py-1">
                    <a class="" href={`#${slug}`}>
                      {depth == 1 ? (
                        <b class="text-xl font-bold">{`${text}`}</b>
                      ) : (
                        <p style={{ 'margin-left': `${depth * 0.45}rem` }}>{`${text}`}</p>
                      )}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          </div>
        )
      }
      {
        post.Content ? (
          <>
            {/* @ts-ignore */}
            <post.Content />
          </>
        ) : (
          <Fragment set:html={post.content} />
        )
      }
    </div>
    <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
      <SocialShare url={url} text={post.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" />
    </div>
  </article>
</section>
