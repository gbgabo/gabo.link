---
import { Icon } from 'astro-icon/components';
import { Picture } from 'astro:assets';

import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import { categoryData } from '~/data';

import i18next, { t } from 'i18next';

import type { Post } from '~/types';

export interface Props {
  post: Post;
  url: string | URL;
}

const { post, url } = Astro.props;
---

<section class="mx-auto py-8 sm:py-16 lg:py-20">
  <article>
    <header class={post.image ? '' : ''}>
      <div class="mx-auto mb-2 mt-0 flex max-w-3xl flex-col justify-between px-4 sm:flex-row sm:items-center sm:px-6">
        {
          post.category && (
            <p>
              <a
                class:list={['font-bold capitalize hover:underline', categoryData[post.category].classes.outline]}
                href={getPermalink(post.category, 'category')}
              >
                {t(`categories.${post.category}`)}
              </a>
            </p>
          )
        }
      </div>
      <h1
        class="leading-tighter mx-auto max-w-3xl px-4 font-heading text-4xl font-bold tracking-tighter sm:px-6 md:text-5xl"
      >
        {post.title}
      </h1>
      <p class="text-muted mx-auto my-4 max-w-3xl px-4 text-justify text-xl dark:text-slate-400 sm:px-6 md:text-2xl">
        {post.excerpt}
      </p>
      <PostTags tags={post.tags} class="mx-auto mb-6 max-w-3xl px-4 sm:px-6" />
      {
        post.image ? (
          <Picture
            src={post.image}
            class="mx-auto mb-6 max-w-full bg-gray-400 dark:bg-slate-700 sm:rounded-md lg:max-w-6xl"
            widths={[400, 900]}
            sizes="(max-width: 900px) 400px, 900px"
            alt={post.description || ''}
            loading="eager"
            aspectRatio={16 / 9}
            width={900}
            height={506}
            loading="eager"
            decoding="async"
            background={undefined}
          />
        ) : (
          <div class="mx-auto max-w-3xl px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
      <div class="mx-auto mb-2 mt-0 flex max-w-3xl flex-col justify-between px-4 sm:flex-row sm:items-center sm:px-6">
        <p>
          <Icon name="tabler:clock" class="-mt-0.5 inline-block h-4 w-4 dark:text-gray-400" />
          <time datetime={String(post.publishDate)}>{getFormattedDate(post.publishDate)}</time>
          {post.readingTime && <> Â· {`${post.readingTime} ${t('post.readingTime')}`}</>}
        </p>
      </div>
    </header>

    <div
      class={`mx-auto ${post.category !== 'lists' && 'px-6'} sm:px-6 max-w-3xl
        prose prose-lg dark:prose-invert dark:prose-headings:text-slate-300 prose-md
        prose-p:text-darker-purple dark:prose-p:text-inherit
        prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold 
        prose-a:text-grape dark:prose-a:text-[#399ee6] 
        prose-img:rounded-md prose-img:shadow-lg mt-8 
        marker:text-light-purple
        prose-code:bg-dark-purple prose-code:after:content-[''] prose-code:before:content-[''] prose-code:text-light-purple prose-code:px-2 prose-code:py-1 prose-code:rounded-md`}
    >
      {
        post.headings.length > 0 && (
          <div class="not-prose fixed bottom-24 right-3 z-10 md:sticky md:top-24">
            <button
              class="fixed bottom-20 right-3 z-10 my-0 h-fit items-center rounded-[14px] bg-grape text-white shadow-md dark:bg-cherry dark:text-acid-green md:sticky md:mx-auto md:mb-2 md:flex md:w-fit md:p-2"
              data-aw-toggle-toc
              aria-label="Table of content"
            >
              <Icon class="h-12 w-12 p-2 md:h-10 md:w-10" name="tabler:list" />
              <p class="m-0 mx-2 hidden md:block">{t('post.toc')}</p>
            </button>
            <nav class="not-prose hidden">
              <ul class="fixed bottom-24 left-0 max-h-96 w-full animate-fade-up overflow-auto overscroll-contain rounded-md border-2 border-dark-purple bg-pastel-purple p-5 text-darker-purple shadow-md dark:border-cherry dark:bg-darker-purple dark:text-acid-green md:sticky md:h-fit md:backdrop-blur-sm">
                {post.headings.map(({ slug, text, depth }) => (
                  <li class="px-3 py-1">
                    <a class="" href={`#${slug}`}>
                      {depth == 1 ? (
                        <b class="text-xl font-bold">{`${text}`}</b>
                      ) : (
                        <p style={{ 'margin-left': `${depth * 0.45}rem` }}>{`${text}`}</p>
                      )}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          </div>
        )
      }
      {
        post.Content ? (
          <>
            {/* @ts-ignore */}
            <post.Content />
          </>
        ) : (
          <Fragment set:html={post.content} />
        )
      }
    </div>
    <div class="mx-auto mt-8 flex max-w-3xl flex-col justify-between px-6 sm:flex-row sm:px-6">
      <SocialShare url={url} text={post.title} class="mt-5 align-middle text-gray-500 dark:text-light-purple sm:mt-1" />
    </div>
  </article>
</section>
