---
import { Icon } from 'astro-icon';
import { Picture, Image } from '@astrojs/image/components';
import { footerData } from '~/data';

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  callToAction?: string | CallToAction;
  callToAction2?: string | CallToAction;
  image?: string | any; // TODO: find HTMLElementProps
  background?: string | any;
}

const socialLinks = footerData.socialLinks;

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
  image = await Astro.slots.render('image'),
  background = await Astro.slots.render('background'),
} = Astro.props;
---

<section class="relative md:-mt-[76px]">
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    {
      background && (
        <div class="relative m-auto h-full overflow-x-hidden">
          {typeof background === 'string' ? (
            <Fragment set:html={background} />
          ) : (
            <Image
              class="mx-auto max-w-none w-auto h-full"
              widths={[400, 768, 1024, 2040]}
              sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
              aspectRatio={1860 / 661}
              format="svg"
              loading="eager"
              {...background}
            />
          )}
        </div>
      )
    }
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="grid grid-cols-4 gap-4 py-12 md:py-20">
      <div class="col-span-4 md:col-span-1 m-auto">
        <div class="bg-[#19002e] mx-auto border-8 border-[#900048] mb-4 w-52 h-52 rounded-full overflow-hidden">
          <Picture
            class="mx-auto rounded-md w-full"
            widths={[400, 768, 1024, 2040]}
            sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
            aspectRatio={1 / 1}
            loading="eager"
            src={import('~/assets/images/profile_picture.jpg')}
            alt="Profile"
          />
        </div>
        <p class="text-[#00ffb7]">Gabriel Gaboardi AKA Gabo</p>
      </div>
      <div
        class="col-span-4 md:col-span-3 dark:bg-[#19002e]/70 backdrop-blur-sm rounded-xl px-5 py-7 md:p-12 max-w-screen-lg"
      >
        {
          title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl">
          {subtitle && <p class="text-xl mb-6 text-muted dark:text-[#c79bff]" set:html={subtitle} />}
          <div class="flex flex-nowrap items-center flex-col sm:flex-row gap-4">
            {
              callToAction && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction === 'string' ? (
                    <Fragment set:html={callToAction} />
                  ) : (
                    <a class="btn btn-primary sm:mb-0 w-full" href={callToAction?.href} target="_blank" rel="noopener">
                      {callToAction?.icon && (
                        <>
                          <Icon name={callToAction.icon} class="w-5 h-5 mr-2 -ml-1.5" />
                        </>
                      )}
                      {callToAction?.text}
                    </a>
                  )}
                </div>
              )
            }
            {
              callToAction2 && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction2 === 'string' ? (
                    <Fragment set:html={callToAction2} />
                  ) : (
                    <a class="btn w-full" href={callToAction2?.href}>
                      {callToAction2?.icon && (
                        <>
                          <Icon name={callToAction2.icon} class="w-5 h-5 mr-2 -ml-1.5" />{' '}
                        </>
                      )}
                      {callToAction2.text}
                    </a>
                  )}
                </div>
              )
            }
            <div>
              {
                socialLinks?.length ? (
                  <ul class="flex w-fit m-auto">
                    {socialLinks.map(({ ariaLabel, href, text, icon }) => (
                      <li>
                        <a
                          class="text-muted dark:text-[#00ffb7] hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                          aria-label={ariaLabel}
                          href={href}
                        >
                          {icon && <Icon name={icon} class="w-5 h-5" />}
                          <Fragment set:html={text} />
                        </a>
                      </li>
                    ))}
                  </ul>
                ) : (
                  ''
                )
              }
            </div>
          </div>
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div>
        {
          image && (
            <div class="relative m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Picture
                  class="mx-auto rounded-md w-full"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  aspectRatio={1024 / 576}
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
