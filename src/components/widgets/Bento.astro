---
import { Icon } from 'astro-icon';
import Chip from '~/components/widgets/Chip.astro';

export interface Props {
  blocks: {
    icon: string;
    title: string;
    span: string;
    items: {
      type?: string;
      value: string | string[];
      href?: string;
      variant: 'primary' | 'secondary' | 'dark';
    }[];
  }[];
}

const { blocks } = Astro.props;
---

<div class="grid grid-cols-3 gap-4 max-w-5xl px-4 m-auto mb-6">
  {
    blocks.map((block) => (
      <Fragment>
        <div
          class:list={[
            'col-span-3 row-span-1 bg-white dark:bg-dark-purple rounded-lg shadow-lg hover:shadow-md transition border border-transparent dark:border-cherry p-4',
            block.span ?? 'md:col-span-1',
          ]}
        >
          <div class="mb-3 flex items-center gap-3">
            {block.icon && (
              <span class="inline-flex items-center justify-center w-9 h-9 rounded-lg bg-light-purple dark:bg-darker-purple dark:text-acid-green">
                <Icon name={block.icon} class="w-6 h-6" />
              </span>
            )}
            <h2 class="inline text-xl font-bold">{block.title}</h2>
          </div>
          <ul>
            {block.items.map(({ type, value, href, variant = 'dark' }) => {
              return (
                <li>
                  <p class="dark:text-light-purple">
                    {type ? `${type}:` : ''}{' '}
                    {value instanceof Array ? (
                      value.map((value) => <Chip value={value} href={href} variant={variant} />)
                    ) : (
                      <Chip value={value} href={href} variant={variant} />
                    )}
                  </p>
                </li>
              );
            })}
          </ul>
        </div>
      </Fragment>
    ))
  }
</div>
