---
import { Icon } from 'astro-icon/components';
import { Picture } from '@astrojs/image/components';

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  callToAction?: string | CallToAction;
  callToAction2?: string | CallToAction;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---

<section class="relative md:-mt-[76px]">
  <div class="pointer-events-none absolute inset-0" aria-hidden="true"></div>
  <div class="relative mx-auto max-w-7xl px-4 sm:px-6">
    <div class="pointer-events-none pt-0 md:pt-[76px]"></div>
    <div class="py-12 md:py-20 lg:flex lg:h-screen lg:items-center lg:gap-8 lg:py-0">
      <div class="mx-auto basis-1/2 pb-10 text-center md:pb-16 lg:text-left">
        {
          title && (
            <h1
              class="leading-tighter mb-4 font-heading text-5xl font-bold tracking-tighter dark:text-gray-200 md:text-6xl"
              set:html={title}
            />
          )
        }
        <div class="mx-auto max-w-3xl lg:max-w-none">
          {subtitle && <p class="text-muted mb-6 text-xl dark:text-slate-300" set:html={subtitle} />}
          <div
            class="m-auto flex max-w-xs flex-col flex-nowrap gap-4 sm:max-w-md sm:flex-row sm:justify-center lg:m-0 lg:max-w-7xl lg:justify-start"
          >
            {
              callToAction && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction === 'string' ? (
                    <Fragment set:html={callToAction} />
                  ) : (
                    <a class="btn btn-primary w-full sm:mb-0" href={callToAction?.href} target="_blank" rel="noopener">
                      {callToAction?.icon && (
                        <>
                          <Icon name={callToAction.icon} class="-ml-1.5 mr-1 h-5 w-5" />{' '}
                        </>
                      )}
                      {callToAction?.text}
                    </a>
                  )}
                </div>
              )
            }
            {
              callToAction2 && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction2 === 'string' ? (
                    <Fragment set:html={callToAction2} />
                  ) : (
                    <a class="btn w-full" href={callToAction2?.href}>
                      {callToAction2?.icon && (
                        <>
                          <Icon name={callToAction2.icon} class="-ml-1.5 mr-1 h-5 w-5" />{' '}
                        </>
                      )}
                      {callToAction2.text}
                    </a>
                  )}
                </div>
              )
            }
          </div>
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div class="basis-1/2">
        {
          image && (
            <div class="relative m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Picture
                  class="mx-auto w-full rounded-md"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  aspectRatio={600 / 600}
                  loading="eager"
                  width={600}
                  height={600}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
