---
import { SITE, BLOG } from '~/config.mjs';
import { categoryData } from '~/data.js';

import Layout from '~/layouts/PageLayout.astro';
import PostLayout from '~/layouts/ListLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';
import Filter from '~/components/widgets/Filter.astro';

import i18next, { t } from 'i18next';

import { fetchPosts } from '~/utils/blog';
import { CATEGORY_BASE, getBlogPermalink } from '~/utils/permalinks';

export const getStaticPaths = async ({ paginate }) => {
  if (BLOG?.disabled || BLOG?.category?.disabled) return [];

  const posts = await fetchPosts(i18next.language);
  const categories = new Set();
  posts.map((post) => {
    typeof post.category === 'string' && categories.add(post.category.toLowerCase());
  });

  return Array.from(categories).flatMap((category: string) =>
    paginate(
      posts.filter((post) => typeof post.category === 'string' && category === post.category.toLowerCase()),
      {
        params: { category: category, blog: CATEGORY_BASE || undefined },
        pageSize: BLOG.postsPerPage,
        props: { category },
      }
    )
  );
};

const { page, category } = Astro.props;

const currentPage = page.currentPage ?? 1;
const meta = {
  title: `${t('categories.title')} '${t(`categories.${category.replaceAll('-', ' ')}`)}' ${
    currentPage > 1 ? ` â€” Page ${currentPage}` : ''
  }`,
  description: t(SITE.description),
  image: `/api/og/category/${category}.png`,
  noindex: BLOG?.category?.noindex,
};
---

<Layout
  breadcrumbs={[
    { title: 'blog', href: '/blog' },
    { title: category, href: '/blog' },
  ]}
  meta={meta}
>
  <PostLayout>
    <Fragment slot="heading">
      <Headline left>
        <a class="text-2xl md:text-3xl" href={getBlogPermalink()}>blog</a><span
          class={categoryData[category].classes.outline}>/{t(`categories.${category.replaceAll('-', ' ')}`)}</span
        >
      </Headline>
    </Fragment>
    <BlogList posts={page.data} />
    <Fragment slot="floating-bar">
      <Filter selected={category} />
    </Fragment>
    <Fragment slot="footer">
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
    </Fragment>
  </PostLayout>
</Layout>
