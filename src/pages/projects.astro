---
import Layout from '~/layouts/PageLayout.astro';
import Headline from '~/components/blog/Headline.astro';
import PostTags from '~/components/blog/Tags.astro';
import ExternalLink from '~/components/blog/content/ExternalLink.astro';

import { Picture } from '@astrojs/image/components';

const projects = [
  {
    title: 'gabo.link personal blog',
    description:
      "It's this very website. It's a fork of an Astro + Tailwind template called Astrowind. It's now implemennted with extra features such as bottom navigation, better handling of YT iframes, optimization of images on md files, and many others",
    technologies: ['Astro', 'Tailwind', 'Typescript', 'Progressive Enhancent', 'mdx'],
    link: 'https://github.com/gbgabo/gabo.link',
    linkText: 'Accese o projeto',
    image: import('~/assets/images/default.png'),
  },
  {
    image: import('~/assets/images/projects/symbols.png'),
    title: 'Laundry Symbols',
    description:
      "A page that lists most of the so called laundry symbols found on every clothing, indicating the manufacturer's suggestions as to methods of washing, drying, dry-cleaning and ironing clothing.",
    technologies: ['Astro', 'Tailwind', 'Typescript', 'Progressive Enhancement'],
    link: 'https://laundry-symbols.vercel.app/',
  },
  {
    image: import('~/assets/images/projects/wildberries.png'),
    title: 'Wildberries Theme Homepage',
    description: 'Wildberries is a purple dark theme, with additional bright accents, almost in a cyberpunkish way. ',
    technologies: ['Next.js', 'Typescript', '@vercel/og'],
    link: 'https://wildberries.style/',
  },
  {
    title: 'Tinytools',
    description:
      'A suite of tiny scripts I maintain with <a href="https://github.com/Calebe94">@calebe94</a>. Our projects are designed to improve your productivity in a simple way',
    technologies: ['Bash', 'Linux'],
    link: 'https://tinytoolsh.github.io/',
    linkText: 'Veja mais',
  },
  {
    title: 'Linky',
    description:
      'My first react website. A project with the purpose to create a link and style editor inspired by linktree',
    technologies: ['React', 'MUI', 'React Context'],
    link: 'https://linky-gbgabo.vercel.app/edit',
  },
];

const meta = {
  title: 'Projects',
  description: 'Projects ',
};
---

<Layout meta={meta}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-7xl">
    <Headline>Projects</Headline>

    <ul>
      {
        projects.map((project) => (
          <li class="mb-12 md:mb-20">
            <div
              class:list={['max-w-md mx-auto md:max-w-none grid gap-3 md:gap-8', project.image ? 'md:grid-cols-2' : '']}
            >
              {project.image && (
                <a class="relative block group" href={project.link ?? 'javascript:void(0)'}>
                  <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg">
                    {project.image && (
                      <Picture
                        src={project.image}
                        class="absolute inset-0 object-cover w-full h-full mb-6 rounded shadow-lg bg-gray-400 dark:bg-slate-700"
                        widths={[400, 900]}
                        sizes="(max-width: 900px) 400px, 900px"
                        alt={project.title}
                        aspectRatio="16:9"
                        loading="lazy"
                        decoding="async"
                      />
                    )}
                  </div>
                </a>
              )}
              <div class="my-auto">
                <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
                  {project.title}
                </h2>

                {project.description && (
                  <p class="flex-grow text-muted dark:text-slate-400 text-lg">
                    <Fragment set:html={project.description} />
                  </p>
                )}
                <PostTags class="mt-4 text-sm" enableLink={false} tags={project.technologies} />
                {project.link && (
                  <ExternalLink class="font-bold mt-4" href={project.link}>
                    {project.linkText ? project.linkText : 'Acesse'}
                  </ExternalLink>
                )}
              </div>
            </div>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>
