---
import Layout from '~/layouts/PageLayout.astro';
import Headline from '~/components/blog/Headline.astro';
import PostTags from '~/components/blog/Tags.astro';
import ExternalLink from '~/components/blog/content/ExternalLink.astro';
import i18next, { t } from 'i18next';

import { Picture } from 'astro:assets';
import { languageSlug } from '~/utils/permalinks';

const projects = [
  {
    title: 'projects.items.blog.title',
    description: 'projects.items.blog.description',
    technologies: ['Astro', 'Tailwind', 'Typescript', 'Progressive Enhancent', 'mdx'],
    link: 'https://github.com/gbgabo/gabo.link',
    linkText: 'projects.ctaAbout',
    image: import('~/assets/images/default.png'),
  },
  {
    image: import('~/assets/images/projects/symbols.png'),
    title: 'projects.items.wash.title',
    description: 'projects.items.wash.description',
    technologies: ['Astro', 'Tailwind', 'Typescript', 'Progressive Enhancement'],
    link: 'https://laundry-symbols.vercel.app/',
  },
  {
    image: import('~/assets/images/projects/wildberries.png'),
    title: 'projects.items.wildberries.title',
    description: 'projects.items.wildberries.description',
    technologies: ['Next.js', 'Typescript', '@vercel/og'],
    link: 'https://wildberries.style/',
  },
  {
    image: import('~/assets/images/projects/tinytools.svg'),
    title: 'projects.items.tinytools.title',
    description: 'projects.items.tinytools.description',
    technologies: ['Bash', 'Linux'],
    link: 'https://tinytoolsh.github.io/',
    linkText: 'projects.ctaAbout',
  },
  {
    image: import('~/assets/images/projects/linky.png'),
    title: 'projects.items.linky.title',
    description: 'projects.items.linky.description',
    technologies: ['React', 'MUI', 'React Context'],
    link: 'https://linky-gbgabo.vercel.app/edit',
  },
];

const meta = {
  title: t('projects.meta.title'),
  description: t('projects.meta.description'),
  image: `/api/og/${languageSlug()}/projects.png`,
};
---

<Layout breadcrumbs={[{ title: t('projects.meta.title'), href: '#top' }]} meta={meta}>
  <section class="mx-auto max-w-7xl px-6 py-12 sm:px-6 sm:py-16 lg:py-20">
    <Headline left>/{t('projects.title')}</Headline>

    <ul>
      {
        projects.map((project) => (
          <li class="mb-12 md:mb-20">
            <div
              class:list={['mx-auto grid max-w-md gap-3 md:max-w-none md:gap-8', project.image ? 'md:grid-cols-2' : '']}
            >
              {project.image && (
                <a class="group relative block" href={project.link ?? 'javascript:void(0)'}>
                  <div class="relative h-0 overflow-hidden rounded bg-transparent pb-[56.25%] md:h-72 md:pb-[75%] lg:pb-[56.25%]">
                    {project.image && (
                      <Picture
                        src={project.image}
                        class="absolute inset-0 m-auto w-full rounded bg-gray-400 object-cover shadow-lg dark:bg-slate-700"
                        widths={[400, 900]}
                        sizes="(max-width: 900px) 400px, 900px"
                        alt={project.title}
                        loading="lazy"
                        decoding="async"
                      />
                    )}
                  </div>
                </a>
              )}
              <div class="my-auto">
                <h2 class="mb-2 font-heading text-xl font-bold leading-tight dark:text-slate-300 sm:text-2xl">
                  {t(project.title)}
                </h2>

                {project.description && (
                  <p class="text-muted flex-grow text-lg dark:text-slate-400">
                    <Fragment set:html={t(project.description)} />
                  </p>
                )}
                <PostTags class="mt-4 text-sm" enableLink={false} tags={project.technologies} />
                {project.link && (
                  <ExternalLink class="mt-4 font-bold" href={project.link}>
                    {project.linkText ? t(project.linkText) : t('projects.ctaVisit')}
                  </ExternalLink>
                )}
              </div>
            </div>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>
